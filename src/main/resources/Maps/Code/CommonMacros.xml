<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Maps.Code.CommonMacros" locale="">
  <web>Maps.Code</web>
  <name>CommonMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Maps.Code.Leaflet</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>CommonMacros</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
## Get HTML from XWiki/2.1 syntax
#macro (getHtml $xwiki)
  #set ($xdom = $services.rendering.parse($xwiki, "xwiki/2.1"))
  $services.rendering.render($xdom, "xhtml/1.0")
#end
## Run the solr query and get data for map in json
#macro (handleMapQuery $queryStatement)
  #set ($query = $services.query.createQuery($queryStatement, 'solr'))
  #set ($discard = $query.bindValue('fq', '{!q.op=AND} type:DOCUMENT'))
  #set ($searchResponse = $query.execute()[0])
  #set ($mapDataArr = [])
  #foreach ($response in $searchResponse.getResults())
    #if ($response.get('object.Maps.Code.PointClass') != '')
      #set ($responseData = {})
      ## Get document title
      #set ($title = $response.get('title_'))
      ## Get document content as html
      #set ($popupContent = "#getHtml($response.get('doccontentraw_'))")
      ## Get the location
      #set ($location = $response.get('property.Maps.Code.PointClass.location_string')[0])
      ## Set the collected information
      #set ($discard = $responseData.put('title', $title))
      #set ($discard = $responseData.put('location', $location))
      #set ($discard = $responseData.put('popupContent', $popupContent))
      ## Get attachment URL for marker icon if attachment available
      #set ($targetDoc = $xwiki.getDocument($response.get('fullname')))
      #set ($firstAttachment = $targetDoc.getAttachmentList())
      #if (!$firstAttachment.isEmpty())
        #set ($attachmentURL = $targetDoc.getAttachmentURL($firstAttachment.get(0).getFilename()))
        #set ($discard = $responseData.put('markerIcon', $attachmentURL))
      #end
      ## Add the collected data into array
      #set ($discard = $mapDataArr.add($responseData))
    #end
  #end
  #set ($mapData = $jsontool.serialize($mapDataArr))
  $mapData
#end
{{/velocity}}</content>
</xwikidoc>
